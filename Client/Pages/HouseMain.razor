@page "/HouseMain"
@inject HttpClient http
@inject NavigationManager navigation


<ListHeader Title="Houses"
            HandleRefresh="@HandleRefresh"
            RoutePath="/houseMain" />

@*<BSTable IsStriped="true" IsSmall="true" @ref="SortableRef">
        <thead class="thead-light">
            <tr>
                <th scope="col"> <a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort()" MlsNumber"))" @onclick:preventDefault>MlsNumber</a> </th>
                <th scope="col">Address</th>
                <th scope="col">Price</th>
                <th scope="col">Details</th>
            </tr>
        </thead>
        <tbody>
            <HouseListTable ErrorMessage="@errorMessage"
                            Houses="@houses"
                            SelectHouse="@SelectHouse" />
        </tbody>
    </BSTable>*@

@if (houses != null && houses.Any())
{
    <BSDataTable Items="houses" Context="item" IsResponsive="true" IsStriped="true" IsSmall="true" @ref="SortableRef">
        <HeaderTemplate>
            <tr>
                <th scope="col"><a href="javascript:void(0)" @onclick="@(()=> SortableRef.Sort("NeighborhoodName"))" @onclick:preventDefault>NeighborhoodName</a> </th>
                <th scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("Bedrooms"))" @onclick:preventDefault>Bedrooms</a></th>
                <th scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("Bathrooms"))" @onclick:preventDefault>Bathrooms</a></th>
                <th scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("AddressText"))" @onclick:preventDefault>AddressText</a></th>
                <th scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("PublicRemarks"))" @onclick:preventDefault>PublicRemarks</a></th>
                <th scope="col"><a href="javascript:void(0)" @onclick="@(() => SortableRef.Sort("Price"))" @onclick:preventDefault>Price</a></th>
                <th scope="col">DetailsLink</th>
                <th scope="col">Action</th>
            </tr>
        </HeaderTemplate>
        <ItemTemplate>
            <th scope="row">@item.NeighborhoodName</th>
            <td scope="row">@item.Bedrooms</td>
            <td scope="row">@item.Bathrooms</td>
            <td scope="row">@item.AddressText</td>
            <td scope="row">@item.PublicRemarks</td>
            <td scope="row">@item.Price</td>
            <td>
                <a href="@("https://www.realtor.ca" + item.RelativeDetailsURL)" target="_blank">Realtor</a>
                <a href="@item.DetailsLink" target="_blank">More info</a>
            </td>
            <td>
                <BSButtonGroup>
                    <BSButton Color="Color.Success" @onclick="@(e => MarkHouse(item.MlsNumber, StatusEnum.Yes))">Yes</BSButton>
                    <BSButton Color="Color.Warning" @onclick="@(e => MarkHouse(item.MlsNumber, StatusEnum.Maybe))">Maybe</BSButton>
                    <BSButton Color="Color.Danger" @onclick="@(e => MarkHouse(item.MlsNumber, StatusEnum.No))">No</BSButton>
                </BSButtonGroup>
            </td>
        </ItemTemplate>
    </BSDataTable>
}


<div class="content-container">
    <div class="columns is-multiline is-variable">
        <div class="column is-8">
            @*<HouseList ErrorMessage="@errorMessage"
                Houses="@houses"
                SelectHouse="@SelectHouse"
                DeleteHouse="@DeleteHouse" />*@
        </div>
    </div>

    <ModalYesNo Message="@modalMessage"
                OnNo="@CloseModal"
                OnYes="@DeleteFromModal"
                Show="@showModal" />
</div>


@code {
    private string errorMessage = "";
    private List<House> houses;
    private BSDataTable<House> SortableRef { get; set; }

    private House houseToDelete;
    private bool showModal;
    private string modalMessage = "";

    protected override async Task OnInitializedAsync()
    {
        houses = await http.GetFromJsonAsync<List<House>>("api/house");
    }

    private async Task HandleRefresh()
    {
        houses = await http.GetFromJsonAsync<List<House>>("api/house");
    }

    private void SelectHouse(House house)
    {
        navigation.NavigateTo($"/product/{house.Id}");
    }

    private void DeleteHouse(House house)
    {
        houseToDelete = house;
        showModal = true;
        modalMessage = $"Would you like to delete {houseToDelete.MlsNumber}";
    }

    private void CloseModal()
    {
        houseToDelete = null;
        showModal = false;
    }

    private async Task DeleteFromModal()
    {
        await http.DeleteAsync($"api/house/{houseToDelete.Id}");
        await HandleRefresh();
        houseToDelete = null;
        showModal = false;
    }

    private async Task MarkHouse(String mlsNumber, StatusEnum status)
    {
        await http.PutAsJsonAsync($"api/house/{mlsNumber}", status);
        await HandleRefresh();
    }
}
